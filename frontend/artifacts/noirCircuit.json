{"noir_version":"0.36.0+801c71880ecf8386a26737a5d8bb5b4cb164b2ab","hash":14684827688709242701,"abi":{"parameters":[{"name":"n","type":{"kind":"field"},"visibility":"public"}],"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/+1bXWsTQRSdTXaTbGLaoCD4ga6gLyKy202aDYJEFERf/QVJs8GiNiXdWn3L/xV88EVBH+y0c7unNzdJaTZvc6HMzsy5537NzC5k6qhzKZk/LZ5pHTUvNNY3bbieRAVyhehviTteKthxB7jicLfdTrs7aRRHg3CnN0w6Ybsz3E2iJOokndFOEsdp0k66vWGvG/aidpxG404vHhuyUsFJcBcUDZ91WxPmf8PzI9MOsiz9cpgF2SQ4Oh5m08FeFpzsZx+Dydd0Ov48OUGCv/B8x7SvptPB92D/YJR+CybHWTAZB8PJ8cHoCBXLzpqWq841LW9fV/EudO7PuzwYjRZ7+/i6RmPobJn2QzbY+3RqchKM0vTwoqDvzYNv+rQJ9HBZFbcZfOAtmj853Uq+uiwF+x/7hnOT+SHODfCHVcPzepbz81i0NE0flxPp6MOgDjgtb4CPdG6xcdKl47fJ7COOt4rlhIR0ed609E0brikttThP1KeD1GM5QKzHsM8MqHL6d5PF4RYfR0T+eEt85XEQ9in4etuMUf0q6nIupFap5fUjrqrARTnBl1Bxe2K3cxVf0X6d+Vr0GeAwe+QPzw/PnS/42hLmMDacQzu+YEficgvkKtIvy2W5LJflslyWy3JZLstluSyX5bJclstyWS7LZbksl+WyXJbLclkuy2W5LJflKpqL5iowR7/h+oJd/dw3/XA9ubhL4m6CP04Tn8VTsP879Lu2J+RO5/OHulwv+s3bg3qhLr/bQPifwPnQOX8uMwxyKRjzGacDczU2R9gHTm7vlxnbFuxV2JwvzJHNOvSl2PnabkDMZQHD74gQ/o9p6b4KF1oTN5jtvumHa8lum/xvgn9lIQc3mP+E/7fCf4fpK7V873N/EI85IN+olg2Ya7K5depcXRAH1hkxvM6Ed80aXVXnJvOnb/rhWpLXeQv8k+rcZP4TvrbC/2V1W1bnLQGPOeB1xjWwxez7rI9rgvR8YW4Tecb9Iq2rBswjvrUiz5Sb8iznqkFsWtzZRmLraDt0uYveJXXwzQO7GKNS82tNC18L0hmBdaL8tdT8WvAZl3TXa9n5TfqVBfhF7557K+olfa/gXc9FdvB9jO/RbcH/CouT3yHDmH0l56Jv+uFakq//CuRL8oufk4R/csVzBr8d+PtWC19bFQEvfctsq/m8ka50b5VwGvPc2QxO8ol09P7Y5L7vJvl/d9CZQzXl4sI84tsratowMZ7FPcvH8YzTUjV9F+wjnnLiMXzPEOicvoDz6wwr2NO4d0twzoL2jEMYc40u1cmf5ZgCv+8v6lSf5XkoM5voT4nh+bPHxt46ud9aGrP5uMswRjaptjWYI91lXJ7A1RLwNcblC1w4RnHrOr80SnVms+DaRLim9Hr/D4xUNWH+NQAA","debug_symbols":"nZvhahpBFEbfZX/nx3535t6ZyauUEkxigiAmqCkU8d2rrVuoO1iO/xz1LMucVZbD3cPwunz+en9abd4+dsPjt8Ow/nhZ7Fcfm9PqMIy/39p9Ljbn1W6/2O6Hx1ryw7DcvJ5e1Tg+DG+r9XJ4LOPx+2nxvF2t16v3p+vDHAapdzDFeDmYQv8c7GGQYSJhImPCu0TRRJRyTdQeYSoXwixdE40S1t2rlCci5XpNJEx09yqneiFyzteEYyIwUTBRMdEokUZMCBOGiYQJ7Dxh5wk7T9h5ws4Tdp6x84ydZ+w8Y+cZO8/YecbOM3aesfOMnTt27ti5Y+eOnTt27ti5Y+eOnTt27th5YOeBnQd2Hth5YOeBnQd2Hth5YOeBnRfsvGDnBTsv2HnBzgt2XrDzgp0X7Lxg5xU7r9h5xc4rdl6x84qdV+y8YucVO6/YecPOG3besPOGnTfsvGHnDTtv2HnDzht2rnHkiDhiHEkcyRxxjgRHCkcqR7h9cfvi9sXti9sXty9uX9y+uH1x++L2jds3bt+4feP2eaATL3TiiU680YlHOvFKJ57pxDudeKgTL3XiqU681YnHOvFaJ57rxHudeLATL3biyU682YlHO/FqJ57txLudeLgTL3fi6U683YnHO/F6J57vxPudeMATL3jiCU+84YlHPPGKJ57xxDueeMgTL3niKU+85YnHPPGaJ57zxHueeNATL3riSU+86YlHPfGqJ571xLueeNgTL3viaU+87YnHPfG6J573xPueeOATL3ziiU+88YlHPvHKJ575xDufeOgTL33iqU+89RlvfcZbn/HWZ7z1GW99xluf8dZnvPUZb33GW5/x1me89RlvfcZbn/HWZ7z1GW99xluf8dZnvPUZb33GW5/x1me89dkdw3h3TOPdMY53xzzeHQN5vPVZP3Z5mkY9Pc2R7om5TzOSHmWGdE/M6zQz63U+VmkcSRzpXjDhExLeZohzJDhSOFL7yKQyYpwhDSP9QHQbEUeMI4kjmSPOkb79mH4vUWyGFI5UjjSM9ANRRPqLzGaw+4HoNmIcSRzJHHGOBEfKf66xDtK3n6f5+8iz/+R+ILqJ9APRbUQcMY4kjmSOOEeCI4Uj3H7h9iu3X7n9yu1Xbr/yTa58k/sdpuTpfqz47Oaq32FuI+KIcSRxJHPEORIcwc8epX4hufWAUxrhJh9Pqx+L7WrxvF6enxA7f/i1eZkeGDst9z8//3xy+vIv","file_map":{"70":{"source":"// Define the Fibonacci function using an array\nunconstrained fn fibonacci(n: Field) -> Field {\n    // If n is 0 or 1, return n directly\n    let mut retValue = 0;\n    if (n == 0) {\n        retValue = n;\n    } else if(n == 1) {\n        retValue = n;\n    } else {\n        // Initialize an array to hold the Fibonacci sequence\n        let mut fib = [0; 100];  // assuming a maximum of 100 elements for simplicity\n        fib[0] = 0;\n        fib[1] = 1;\n\n        // Calculate Fibonacci numbers up to n iteratively\n        for i in 2..1000 {\n            let y = i as Field;\n            if(n==y) {\n                break;\n            }\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n\n        // Return the nth Fibonacci number\n        retValue = fib[n];\n    }\n    retValue\n}\n\n// Main circuit to compute Fibonacci of a given number\nfn main(n: pub Field) -> pub Field {\n    fibonacci(n)\n}\n","path":"/home/lenn/Projects/circom-github-action-example/fibonacci_noir/src/main.nr"}},"names":["main"],"brillig_names":["fibonacci"]}